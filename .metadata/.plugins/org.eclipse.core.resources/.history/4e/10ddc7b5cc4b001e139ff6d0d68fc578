server.port: 8088





# 1. Provider : Naver, Kakao
# Naver
spring.security.oauth2.client.provider.naver.authorizationUri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.tokenUri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.userInfoUri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.userNameAttribute=response

# Kakao
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id



# 2. Registration : 
	# client-id		<== 클라이언트 키값 # [ 😜 클라이언트 키 값]
	# client-secret	<== 클라이언트 시크릿값 #[ 😛 클라이언트 시크릿 값 ]
	
# Google, facebook , git 은 Spring-security-oauth2 를 지원해서 위의 셋팅이 필요없음. 
#Google
spring.security.oauth2.client.registration.google.client-id= #[ 😜 클라이언트 키 값 ]
spring.security.oauth2.client.registration.google.client-secret=#[ 😜 클라이언트 키 값 ]
spring.security.oauth2.client.registration.google.scope=profile,email

# Facebook 
spring.security.oauth2.client.registration.facebook.client-id=#[ 😜 클라이언트 키 값 ]
spring.security.oauth2.client.registration.facebook.client-secret=#[ 😜 클라이언트 키 값 ]
spring.security.oauth2.client.registration.facebook.scope=email, public_profile
# http://localhost:8088/login/oauth2/code/facebook     <<== 개발자 사이트의 redirect url 등록  <<등록안됨>>

# GitHub 
spring.security.oauth2.client.registration.github.client-id=#[ 😜 클라이언트 키 값 ]
spring.security.oauth2.client.registration.github.client-secret=#[ 😜 클라이언트 키 값 ]

# Kakao    890549
spring.security.oauth2.client.registration.kakao.client-id=#[ 😜 클라이언트 키 값 ]
spring.security.oauth2.client.registration.kakao.client-secret=#[ 😜 클라이언트 키 값 ]
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
#http://localhost:8088/login/oauth2/code/kakao        <<== 개발자 사이트의 redirect url 등록   
spring.security.oauth2.client.registration.kakao.scope=profile_nickname, profile_image, account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao

# Naver
spring.security.oauth2.client.registration.naver.client-id=#[ 😜 클라이언트 키 값 ]
spring.security.oauth2.client.registration.naver.client-secret=#[ 😜 클라이언트 키 값 ]
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
#http://localhost:8088/login/oauth2/code/naver		<<== 개발자 사이트의 redirect url 등록
spring.security.oauth2.client.registration.naver.scope=name, nickname, email, profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver





